---
- name: ManageIQ server 1         # First server
  vars_files:                     # take variables from file
    - ./vars/vars.yml
  hosts: "{{MIQ_SERVER}}"
  remote_user: root
  gather_facts: true
  tasks: 
  - name: take backup to production.dump
    shell: "pg_dump -Fc vmdb_production > {{DUMP_NAME}}"

- name: Control node
  vars_files:
    - ./vars/vars.yml
  hosts: "{{CONTROL_NODE}}"           # Controle node 
  remote_user: root
  become: yes
  tasks:
  - name: take dump file to local
    shell: scp root@{{MIQ_SERVER}}:/root/{{DUMP_NAME}} .
  
  - name: install new ManageIQ VM 
    command: virt-install --virt-type kvm \
             --import --name ManageIQ8 \
             --memory 12288 \
             --vcpus 4 \
             --cpu host  \
             --disk "{{PATH_TO_IMAGE}}",format=qcow2,bus=virtio  \
             --network default,model=virtio   \
             --os-type=linux \
             --os-variant=centos7.0   \
             --noautoconsole
  
  - pause: seconds={{TIME}}         # Take some time to boot

  - name: get vm ip address
    shell: virsh domifaddr ManageIQ8 | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" | head -1
    register: host_name

  - name: install the latest version of sshpass
    yum:
      name: sshpass
      state: present
    when: ansible_distribution == "CentOS"

  - name: install the latest version of sshpass
    apt:
      name: sshpass
      state: present
    when: ansible_distribution == "Ubuntu"
  
  - debug:
      msg: "ip is {{host_name.stdout}}"
  
  - pause: seconds={{TIME_2}}                   # Take time to start ssh service
  
  - name: copy ssh id
    command: sshpass -p "smartvm" ssh-copy-id -o StrictHostKeyChecking=no root@{{host_name.stdout}}
  
  - name: copy dump to new instance
    shell: scp /root/{{DUMP_NAME}} root@{{host_name.stdout}}:/root/

  - name: Add host to /etc/ansible/hosts
    shell: "echo {{host_name.stdout}} >>  /etc/ansible/hosts"
  
  - add_host:
      name: "{{host_name.stdout}}"
  
  - replace:
      path: "{{PATH_TO_MIQ_SETUP}}"
      regexp: 'hosts:\s[A-Za-z0-9]*.[0-9]*.[0-9]*.[0-9]*'
      replace: 'hosts: {{host_name.stdout}}'
  - debug: 
      msg: "Changed ip in miq_setup.yml"
  
  - pause: seconds=5
  
  - name: Configuring ManageIQ new server *This might take a time*
    shell: ansible-playbook {{PATH_TO_MIQ_SETUP}}
  
  - debug:
      msg: "Done! Servre Configured Successfully :)"
